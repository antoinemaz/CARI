class Utilisateur:
    """Classe définissant un utilisateur caractérisée par :
    - nom
    - son prénom
    - son mail
    - mot de passe
    - son entité """
    
    def __init__(self,nom,prenom,mail,mdp,entite): # Notre méthode constructeur
        
        self.nom = nom
        self.prenom = prenom
        self.mail = mail
        self.mdp = mdp
        self.entite = entite

    def getInfosUser(unid):
         rows = db.auth_user[unid]
         return rows
        
    def random_password():
        import string
        import random
        password = ''
        specials=r'!#$*?'         
        for i in range(0,3):
            password += random.choice(string.lowercase)
            #password += random.choice(string.uppercase)
            password += random.choice(string.digits)
            #password += random.choice(specials)            
        return ''.join(random.sample(password,len(password)))

    def initPassword(id):
       mdp = userService.random_password()

       rowUser = userService.getInfosUser(id)
       rowUser.update_record(password= db.auth_user.password.validate(mdp)[0] )
       return mdp

class President(Utilisateur):

    def getPresidents():
        rows = db(db.auth_user.group_id==Constantes.PRESIDENT).select()
        return rows
